{"version":3,"sources":["src/app/common/api.service.ts","src/app/common/http.service.ts","src/app/dashboard/district/mock.district.ts"],"names":[],"mappings":";;+mBAKA,GAAa,CAAA,UAAb,CAHA,qBAAA,CAIS,KAAA,YAAA,CAAe,0EAAf,CACP;AACO,KAAA,gBAAA,CAAmB,UAAnB,CACA,KAAA,YAAA,CAAe,MACvB,CALD,CAAa,UAAU,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHtB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,CACV,UAAU,CAAE,MADF,CAAX,CAGsB,CAAA,CAAV,UAAU,CAAV,C;;owCCIb,GAAa,CAAA,WAAb,yBAEE,qBAAoB,UAApB,CAAoD,UAApD,CAA0E,CAAtD,KAAA,UAAA,CAAA,UAAA,CAAgC,KAAA,UAAA,CAAA,UAA2B,CAFjF,wCAGS,OAHT,CAGS,iBAAQ,OAAR,CAAsB,EAAtB,CAA6B,CAClC,GAAM,CAAA,UAAU,CAAG,KAAK,UAAL,CAAgB,YAAhB,CAA+B,OAA/B,CAAyC,GAAzC,CAA+C,EAAlE,CACA,MAAO,MAAK,UAAL,CAAgB,GAAhB,CAAoB,UAApB,CAAgC,CACrC,OAAO,CAAE,GAAI,CAAA,iDAAA,CAAA,aAAA,CAAJ,CAAgB,CACvB,eAAgB,kBADO,CAAhB,CAEP;oDAHmC,CAAhC,CAMR,CAXH,QAaS,MAbT,CAaS,gBAAO,OAAP,CAAmB,CACxB,GAAM,CAAA,UAAU,CAAG,KAAK,UAAL,CAAgB,YAAhB,CAA+B,OAAlD,CACA,MAAO,MAAK,UAAL,CAAgB,GAAhB,CAAoB,UAApB,CAAP,CACA;AACD,CAjBH,QAmBS,UAnBT,CAmBS,oBAAW,OAAX,CAAuB,CAC5B,GAAM,CAAA,UAAU,CAAG,KAAK,UAAL,CAAgB,YAAhB,CAA+B,OAAlD,CACA;AACA,MAAO,CAAA,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,8DAAA,CAAA,MAAA,CAAH,CACR,CAvBH,QAyBS,GAzBT,CAyBS,aAAI,OAAJ,CAAkB,EAAlB,CAA2B,IAA3B,CAAoC,CACzC,GAAM,CAAA,UAAU,CAAG,KAAK,UAAL,CAAgB,YAAhB,CAA+B,OAA/B,CAAyC,GAAzC,CAA+C,EAAlE,CACA,MAAO,MAAK,UAAL,CAAgB,GAAhB,CAAoB,UAApB,CAAgC,IAAhC,CAAsC,CAC3C,OAAO,CAAE,GAAI,CAAA,iDAAA,CAAA,aAAA,CAAJ,CAAgB,CACvB,eAAgB,kBADO,CAAhB,CADkC,CAAtC,CAKR,CAhCH,QAkCS,IAlCT,CAkCS,cAAK,OAAL,CAAmB,IAAnB,CAA4B,CACjC,GAAM,CAAA,UAAU,CAAG,KAAK,UAAL,CAAgB,YAAhB,CAA+B,OAAlD,CACA,MAAO,MAAK,UAAL,CAAgB,IAAhB,CAAqB,UAArB,CAAiC,IAAjC,CAAuC,CAC5C,OAAO,CAAE,GAAI,CAAA,iDAAA,CAAA,aAAA,CAAJ,CAAgB,CACvB,eAAgB,kBADO,CAAhB,CADmC,CAAvC,CAKR,CAzCH,QA2CS,MA3CT,CA2CS,iBAAO,OAAP,CAAqB,EAArB,CAA4B,CACjC,GAAM,CAAA,UAAU,CAAG,KAAK,UAAL,CAAgB,YAAhB,CAA+B,OAA/B,CAAyC,GAAzC,CAA+C,EAAlE,CACA,MAAO,MAAK,UAAL,CAAgB,MAAhB,CAAuB,UAAvB,CAAmC,CACxC,OAAO,CAAE,GAAI,CAAA,iDAAA,CAAA,aAAA,CAAJ,CAAgB,CACvB,eAAgB,kBADO,CAAhB,CAD+B,CAAnC,CAKR,CAlDH,sBAAA,C,mDAEkC,iDAAA,CAAA,YAAA,C,QAAgC,gDAAA,CAAA,YAAA,C,IAFrD,WAAW,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHvB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,CACV,UAAU,CAAE,MADF,CAAX,CAGuB,CAAA,CAAX,WAAW,CAAX,C;;ylBCRN,GAAM,CAAA,SAAS,CAAG,CACrB,CACI,EAAE,CAAE,QADR,CAEI,YAAY,CAAE,QAFlB,CADqB,CAAlB,CAOA,GAAM,CAAA,IAAI,CAAG,CAChB,CACI,QAAQ,CAAE,eADd,CAEI,YAAY,CAAE,QAFlB,CADgB,CAAb,C","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  public API_BASE_URL = 'http://ec2-52-15-97-155.us-east-2.compute.amazonaws.com:8080/led/api/v1/';\r\n  // District API\r\n  public API_DISTRICT_API = 'district';\r\n  public API_AREA_API = 'area';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { ApiService } from '../common/api.service';\r\nimport { of } from 'rxjs';\r\nimport { Districts, Area } from '../dashboard/district/mock.district';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private httpClient: HttpClient, private apiService: ApiService) { }\r\n  public getById(apiName: any, id: any) {\r\n    const requestUrl = this.apiService.API_BASE_URL + apiName + '/' + id;\r\n    return this.httpClient.get(requestUrl, {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })/*,\r\n      params: new HttpParams().set('id', id)*/\r\n    });\r\n  }\r\n\r\n  public getAll(apiName: any) {\r\n    const requestUrl = this.apiService.API_BASE_URL + apiName;\r\n    return this.httpClient.get(requestUrl);\r\n    // return of(Districts);\r\n  }\r\n\r\n  public getAllArea(apiName: any) {\r\n    const requestUrl = this.apiService.API_BASE_URL + apiName;\r\n    // return this.httpClient.get(requestUrl);\r\n    return of(Area);\r\n  }\r\n\r\n  public put(apiName: any, id: any, data: any) {\r\n    const requestUrl = this.apiService.API_BASE_URL + apiName + '/' + id;\r\n    return this.httpClient.put(requestUrl, data, {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    });\r\n  }\r\n\r\n  public post(apiName: any, data: any) {\r\n    const requestUrl = this.apiService.API_BASE_URL + apiName;\r\n    return this.httpClient.post(requestUrl, data, {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    });\r\n  }\r\n\r\n  public delete(apiName: any, id: any) {\r\n    const requestUrl = this.apiService.API_BASE_URL + apiName + '/' + id;\r\n    return this.httpClient.delete(requestUrl, {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    });\r\n  }\r\n}\r\n","\r\nexport const Districts = [\r\n    {\r\n        id: 'ranchi',\r\n        districtName: 'Ranchi',\r\n    }\r\n];\r\n\r\nexport const Area = [\r\n    {\r\n        areaName: 'Bokaro Gramin',\r\n        districtName: 'Bokaro',\r\n    }\r\n];\r\n"],"sourceRoot":"webpack:///"}